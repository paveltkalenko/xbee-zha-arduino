//
// Created by apenner on 2/7/2017.
//

#ifndef XBEEZHA_BASICCLUSTER_H
#define XBEEZHA_BASICCLUSTER_H

#include "../ZHA_Clusters.h"

#define BASIC_CLUSTER_ID 								0x0000
#define BASIC_CLUSTER_ATTRIBUTE_ZCL_VERSION 		  	0x0000
#define BASIC_CLUSTER_ATTRIBUTE_APPLICATION_VERSION 	0x0001
#define BASIC_CLUSTER_ATTRIBUTE_STACK_VERSION			0x0002
#define BASIC_CLUSTER_ATTRIBUTE_HW_VERSION				0x0003
#define BASIC_CLUSTER_ATTRIBUTE_MANUFACTURER_NAME		0x0004
#define BASIC_CLUSTER_ATTRIBUTE_MODEL_IDENTIFIER    	0x0005
#define BASIC_CLUSTER_ATTRIBUTE_DATE_CODE				0x0006
#define BASIC_CLUSTER_ATTRIBUTE_POWER_SOURCE			0x0007
#define BASIC_CLUSTER_ATTRIBUTE_LOCATION_DESCRIPTION	0x0010
#define BASIC_CLUSTER_ATTRIBUTE_PHYSICAL_ENVIRONMENT	0x0011
#define BASIC_CLUSTER_ATTRIBUTE_DEVICE_ENABLED			0x0012
#define BASIC_CLUSTER_ATTRIBUTE_ALARM_MASK				0x0013
#define BASIC_CLUSTER_ATTRIBUTE_DISABLE_LOCAL_CONFIG	0x0014

class BasicCluster : public ZHA_Cluster {
public:
    BasicCluster();

private:
    bool processCommand(uint8_t *frameData, uint8_t frameDataLength) { };
};

BasicCluster::BasicCluster() {
    /* mandatory attributes, default values */
//    _attrs.add(new ZHA_Attribute(BASIC_CLUSTER_ATTRIBUTE_ZCL_VERSION, ZHA_TYPE_UINT8, 0x1));
//    _attrs.add(new ZHA_Attribute(BASIC_CLUSTER_ATTRIBUTE_POWER_SOURCE, ZHA_TYPE_8BIT_ENUMERATION, 0x0));
//    _attrs.add(new ZHA_Attribute(BASIC_CLUSTER_ATTRIBUTE_MANUFACTURER_NAME, ZHA_TYPE_CHARACTER_STRING, String("GE_Appliances")));
//    _attrs.add(new ZHA_Attribute(BASIC_CLUSTER_ATTRIBUTE_MODEL_IDENTIFIER, ZHA_TYPE_CHARACTER_STRING, String("ZLL Light")));
    setAttribute(BASIC_CLUSTER_ATTRIBUTE_ZCL_VERSION, ZHA_TYPE_UINT8, 0x1);
    setAttribute(BASIC_CLUSTER_ATTRIBUTE_POWER_SOURCE, ZHA_TYPE_8BIT_ENUMERATION, 0x0);

    _clusterId = BASIC_CLUSTER_ID;
}
#endif //XBEEZHA_BASICCLUSTER_H
